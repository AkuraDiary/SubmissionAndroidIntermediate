Skenario testing submissionintermediate 2

=== UNIT TEST ===

RepositoryTest.kt => Repository.kt 

1 . when get userLogin should return LiveData UserLoginResult
- memastikan mengembalikan nilai berupa LiveData<UserLoginResult> saat mendapatkan value dari userLogin
- memastikan returned data sama seperti expectedData

2 . when get message should return LiveData String
- memastikan mengembalikan nilai berupa LiveData<String> saat mendapatkan value dari message
- memastikan returned data sama seperti expectedData

3 . when get isLoading should return LiveData Boolean
- memastikan mengembalikan nilai berupa LiveData<Boolean> saat mendapatkan value dari isLoading
- memastikan returned data sama seperti expectedData

4 . when get listStory should return LiveData List Story
- memastikan mengembalikan nilai berupa LiveData<List<Story>> saat mendapatkan value dari storyList
- memastikan returned data sama seperti expectedData

5 . verify getStoriesData should not Null
- memastikan getStoriesdata mengembalikan nilai LiveData<PagingData<Story>>>
- memastikan data kembalian tidak null
- memastikan jumlah data sama dengan yang diharapkan
- memastikan data duggaan dan data sebenarnya di index ke 0 sama dengan memeriksa nilai name

6 . verify getStoriesData with location is working
- memverifikasi fungsi getStoriesWithLocation bekerja dengan semestinya
- memastikan returned data sama seperti expectedData
- memastikan nilai longitude returned data di index ke 0 tidak bernilai Null
- memastikan nilai latitude returned data di index ke 0 tidak bernilai Null

7 . verify uploadStory function is worked by checking the message response
- memverifikasi fungsi uploadStory bekerja dengan semestinya
- memastikan returned data sama seperti expectedData

8 . verify uploadStoryWithLocation function is worked by checking the message response
- memverifikasi fungsi uploadStoryWithLocation bekerja dengan semestinya
- memastikan returned data sama seperti expectedData

9 . verifiy doLoginUser function is works by check the return value should be UserLoginResult
- memverifikasi fungsi doLoginUser bekerja dengan semestinya
- memastikan returned data sama seperti expectedData

10 . verify doRegisterUser function is works by check the isLoading value when its called
- memverifikasi fungsi doRegisterUser bekerja dengan semestinya
- memastikan returned data sama seperti expectedData


UploadVMTest.kt => UploadVM.kt

1 . when get message should return LiveData String
- memastikan mengembalikan nilai berupa LiveData<String> ketika mendapatkan value dari message
- memastikan returned data sama seperti expectedData

2 . verify uploadStory function is worked by checking the message response
- memverifikasi fungsi uploadStory yang ada di viewmodel bekerja dengan semestinya
- memastikan returned data sama seperti expectedData

3 . verify uploadStoryWithLocation function is works by checking the message value
- memverifikasi fungsi uploadStoryWithLocation yang ada di viewmodel bekerja dengan semestinya
- memastikan returned data sama seperti expectedData


AuthVMTest.kt => AuthVM.kt

1 . when get usrLogin from viewmodel should return LiveData UserLoginResult
- memastikan mengembalikan nilai berupa LiveData<UserLoginResult> saat mendapatkan value usrLogin dari authVM
- memastikan returned data sama seperti expectedData

2 . when get message from viewmodel should return LiveData String
- memastikan mengembalikan nilai berupa LiveData<String> saat mendapatkan value message dari authVM
- memastikan returned data sama seperti expectedData

3 . when get isLoading from viewmodel should return LiveData Boolean
- memastikan mengembalikan nilai berupa LiveData<Boolean> saat mendapatkan value isLoading dari authVM
- memastikan returned data sama seperti expectedData


4 . verify doLogin function in view model works
- memverifikasi fungsi doLoginUser bekerja dengan semestinya
- memastikan returned data sama seperti expectedData

5 . verify doRegister function in view model works
- memverifikasi fungsi doRegisterUser bekerja dengan semestinya
- memastikan returned data sama seperti expectedData


MapsVMTest.kt => MapsVM.kt

1 . when get storyList should return LiveData List Story
- memastikan mengembalikan nilai berupa LiveData<List<Story>> saat mendapatkan value dari storyList
- memastikan returned data sama seperti expectedData

2 . verify getStoriesWithLocations function in viewmodel works
- memverifikasi fungsi getStoriesWithLocation bekerja dengan semestinya
- memastikan returned data sama seperti expectedData
- memastikan nilai longitude returned data di index ke 0 tidak bernilai Null
- memastikan nilai latitude returned data di index ke 0 tidak bernilai Null


HomeViewModelTest.kt => HomeViewModel.kt

1 . when get isLoading from view model should return LiveData Boolean
- memastikan mengembalikan nilai berupa LiveData<String> saat mendapatkan value message dari authVM
- memastikan returned data sama seperti expectedData

2 . when get message from view model should return LiveData Boolean
- memastikan mengembalikan nilai berupa LiveData<Boolean> saat mendapatkan value isLoading dari authVM
- memastikan returned data sama seperti expectedData

3. when get stories should not Null
- memastikan getStoriesdata mengembalikan nilai LiveData<PagingData<Story>>>
- memastikan data kembalian tidak null
- memastikan jumlah data sama dengan yang diharapkan
- memastikan data duggaan dan data sebenarnya di index ke 0 sama dengan memeriksa nilai name


DataStoreVMTest.kt => DataStoreVM.kt

1 . getLoginSession should not return null and should success
- memverifikasi fungsi getLoginSession bekerja dengan semestinya
- memastikan mengembalikan nilai berupa LiveData<UsrSession> saat fungsi getLoginSession dipanggil
- memastikan returned data sama seperti expectedData

2 . verify setLoginSession function is works
- memasukkan data dummy kedalam fungsi setLoginSession
- memverifikasi fungsi setLoginSession bekerja dengan semestinya
- memastikan data tidak null

3. verify logout fucntion is works
- melakukan simulasi login
- memanggil fungsi logout dan memverifikasi fungsi logout bekerja dengan semestinya
- mengambil data setelah logout
- memastikan nilai isLoggin di data setelah logout adalah false


=== UNIT TEST ===


=== INSTRUMENTATION TEST ===



=== INSTRUMENTATION TEST ===